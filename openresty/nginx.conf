worker_processes  1;
error_log logs/error.log;
events {
    worker_connections 10240;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # log with json format 
    log_format  main escape=json  '{"@timestamp":"$time_iso8601",'
                                  '"server_addr":"$server_addr",'
                                  '"server_port":"$server_port",'
                                  '"hostname":"$hostname",'
                                  '"remote_addr":"$remote_addr",'
                                  '"request_method":"$request_method",'
                                  '"scheme":"$scheme",'
                                  '"server_name":"$server_name",'
                                  '"http_referer":"$http_referer",'
                                  '"request_uri":"$request_uri",'
                                  '"args":"$args",'
                                  '"body_bytes_sent":$body_bytes_sent,'
                                  '"request_body":"$request_body",'
                                  '"response_body":"$response_body",'
                                  '"status": $status,'
                                  '"request_time":$request_time,'
                                  '"upstream_response_time":"$upstream_response_time",'
                                  '"upstream_addr":"$upstream_addr",'
                                  '"upstream_status":"$upstream_status",'
                                  '"http_user_agent":"$http_user_agent",'
                                  '"http_x_forwarded_for":"$http_x_forwarded_for",'
                                  '"http_x_request_id":"$http_x_request_id",'
                                  '"content_type":"$content_type"'
                                  '}';

    access_log  logs/access.log main;

    sendfile        on;

    keepalive_timeout  65;

    # fastcgi settings
    fastcgi_connect_timeout 300s;
    fastcgi_send_timeout 300s;
    fastcgi_read_timeout 300s;
    fastcgi_buffer_size 128k;
    fastcgi_buffers 8 128k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_temp_file_write_size 256k;
    fastcgi_intercept_errors on;
    fastcgi_hide_header X-Powered-By;

    # proxy timeout
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    server_tokens off;
    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 200m;
    client_body_buffer_size 10m;
    tcp_nopush on;
    tcp_nodelay on;

    gzip  on;
    gzip_buffers 16 8k;
    gzip_comp_level 5;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
      text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
      text/javascript application/javascript application/x-javascript
      text/x-json application/json application/x-web-app-manifest+json
      text/css text/plain text/x-component
      font/opentype application/x-font-ttf application/vnd.ms-fontobject
      image/x-icon;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";


    # 寻找 lua 脚本
    # 相对路径是在启动 Nginx 时由 -p PATH 决定的，如果启动 Nginx 时没有配置 -p PATH，
    # 就会使用编译时 --prefix 的值，该值一般存放在 Nginx 的 $prefix（也可以用 ${prefix} 来表示）变量中
    
    # 相对路径
    lua_package_path "conf/lua/?.lua;;"; 
    
    # 绝对路径
    #lua_package_path "${prefix}conf/lua/?.lua;;"; 

    server {
        listen 80;
        server_name  localhost;

        # log request body
        lua_need_request_body on;
        set $response_body "";
        body_filter_by_lua '
            local response_body = string.sub(ngx.arg[1], 1, 1000)
            ngx.ctx.buffered = (ngx.ctx.buffered or "") .. response_body
            if ngx.arg[2] then
                ngx.var.response_body = ngx.ctx.buffered
            end
        ';

        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say("<p>hello, world</p>")
            }
        }
    }
}
